{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface WalletConnectCapacitorPlugin {\n  /**\n    * Connect action with walletConnect implementation (Only IOS)\n    *\n    * @since 1.0\n    */\n  connect(options: { dappName: string, dappDesc: string, dappURL: string, brigeURL: string, uriModel: String }): Promise<{ value: string }>;\n  \n  /**\n    * Return network ID (Only IOS)\n    *\n    * @since 1.0\n    */\n  getNetworkId(): Promise<{ result: string }>;\n\n  /**\n    * Open wallet and ask to sign message(Only IOS)\n    * Return signed message\n    */\n  sign(options: { message: string }): Promise<{ signature: string }>;\n\n  /**\n    * Open wallet and ask to sign transaction (Only IOS)\n    * Return signed transaction\n    */\n  sendTransaction(options: { to: string, value: string, data: string, gas: string }): Promise<{ result: string }>;\n\n  /**\n    * Send RPC request\n    */\n  sendCustomRequest(options: { method: string, params: string[] }): Promise<{ result: string }>;\n\n  /**\n    * Add listener of event\n    */\n  addListener(name: string, callback: (info: any) => void): void;\n}\n"]}